// Generated by typings
// Source: https://gist.githubusercontent.com/legokichi/c3d5420057bcb554dc11/raw/39f6b9a3852daed2d88c75b737247c59eccb4c3a/NarLoader.d.ts

declare module "narloader" {
export module NarLoader {
  function loadFromBuffer(buffer: ArrayBuffer): Promise<NanikaDirectory>;
  function loadFromURL(url: string): Promise<NanikaDirectory>;
  function loadFromBlob(blob: Blob): Promise<NanikaDirectory>;
}

export class NanikaFile {
  constructor(file: ArrayBuffer);
  //constructor(file: JSZipObject);
  toString(): string;
  buffer(): ArrayBuffer;
  valueOf(): ArrayBuffer;
}

export class NanikaDirectory {
  constructor(
    files: {[path_to_file: string]: NanikaFile;},
    options?: {has_install?: boolean, has_descript?: boolean});
  files: {[path_to_file: string]: NanikaFile;};
  install: {[key: string]: string;};
  descript: {[key: string]: string;};
  asArrayBuffer(): {[path_to_file: string]: ArrayBuffer;};
  listChildren(): string[];
  addDirectory(dir: NanikaDirectory, options?: {has_descript: boolean}): NanikaDirectory;
  getDirectory(dirpath: string, options?: {has_descript: boolean}): NanikaDirectory;
  wrapDirectory(dirpath: string, options?: {has_descript: boolean}): NanikaDirectory;
  getElements(elempaths: string[], options?: {has_descript: boolean}): NanikaDirectory;
  removeElements(elmpaths: string[], options?: {has_descript: boolean}): NanikaDirectory;
  hasElement(elempath: string[]): boolean;
}
}
